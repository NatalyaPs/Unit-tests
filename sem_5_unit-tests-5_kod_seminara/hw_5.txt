*Задание 1. 
============
*Представьте, что вы работаете над разработкой простого приложения для записной книжки, 
которое позволяет пользователям добавлять, редактировать и удалять контакты.
Ваша задача - придумать как можно больше различных тестов 
(юнит-тесты, интеграционные тесты, сквозные тесты) для этого приложения. 
Напишите название каждого теста, его тип и краткое описание того, что этот тест проверяет.


юнит-тесты:
----------
testAddContact() - добавить контакт
testDeleteContact() - удалить контакт
testChangeContact() - изменить контакт
testFindContact() - найти  контакт (могут быть раззные варианты: по id, имени, телефону)
testShowAllContacts() - показать все контакты

интеграционные тесты:
--------------------
testAddDeleteChangeContact() - проверяет взаимодействие с пользовательским интефейсом
testFindShowCurrentContacts () - проверка списка контактов после внесения изменений пользователем


сквозные тесты:
---------------
testContactsEndToEnd() - проверяется полностью работа приложения, взаимодействие всех частей, без заглушек. 
Работа пользователя с контактами, корректное отображение данных, их хранение и все предусмотренные в приложении действия.



*Задание 2.
============ 
*Ниже список тестовых сценариев. Ваша задача - определить тип каждого теста 
(юнит-тест, интеграционный тест, сквозной тест) и объяснить, почему вы так решили.


2.1. Проверка того, что функция addContact корректно добавляет новый контакт в список контактов.
--- это пример юнит-теста, т.к. проверяется только одна функция (один модуль)


2.2. Проверка того, что при добавлении контакта через пользовательский интерфейс, 
контакт корректно отображается в списке контактов.
--- интеграционный тест, так как есть связь(взаимодействие) пользовательского интерфейса и списка контактов



2.3. Проверка полного цикла работы с контактом: создание контакта, его редактирование 
и последующее удаление.
--- сквозной тест, т.к. проверяется полный цикл работы с контактом


